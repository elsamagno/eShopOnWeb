@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<IndexModel> Localizer
@inject IHtmlLocalizer<IndexModel> HtmlLocalizer

@{
 
    ViewData["Title"] = Localizer["Catalog"];
    @model IndexModel


<p>Current culture: @System.Globalization.CultureInfo.CurrentCulture.DisplayName</p>
<p>Current UI culture: @System.Globalization.CultureInfo.CurrentUICulture.DisplayName</p>
   
<p>Current culture: @System.Globalization.CultureInfo.CurrentCulture.Name</p>

    var href = $"/reports/pdf/catalog{HttpContext.Request.QueryString.ToString()}";
}
<h2>@ViewData["MyTitle"]</h2>

<p>@Localizer["test"]</p>

<section class="esh-catalog-hero">
    <div class="container">
        <img class="esh-catalog-title" src="~/images/main_banner_text.png" />
    </div>
</section>
<section class="esh-catalog-filters">
    <div class="container">
        <form method="get">
            <a href="@href" target="_blank"><i style="font-size: 35px;" class="fa fa-file-pdf"></i></a>
            <label class="esh-catalog-label" data-title="View Type">
                <select asp-for="@Model.CatalogModel.ResultView"
                asp-items="@Model.CatalogModel.ResultViews" class="esh-catalog-filter"></select>
            </label>
            <label class="esh-catalog-label" data-title="brand">
                <select asp-for="@Model.CatalogModel.BrandFilterApplied"
                asp-items="@Model.CatalogModel.Brands" class="esh-catalog-filter"></select>
            </label>
            <label class="esh-catalog-label" data-title="type">
                <select asp-for="@Model.CatalogModel.TypesFilterApplied"
                asp-items="@Model.CatalogModel.Types"
                class="esh-catalog-filter"></select>
            </label>
            <input type="text" asp-for="@Model.CatalogModel.SearchText" />
            
            <input class="esh-catalog-send" type="image" src="~/images/arrow-right.svg" />
        </form>
    </div>
</section>
<div class="container">
    @if (Model.CatalogModel.CatalogItems.Any())
    {
        @await Html.PartialAsync("_pagination", Model.CatalogModel.PaginationInfo);

        switch (Model.CatalogModel.ResultView) {
            case ResultView.Grid:    
                <partial name="ResultViews/_gridView" for="@Model.CatalogModel.CatalogItems" />        
                break;
            case ResultView.List: {
                Func<dynamic, object> listItemTemplate = @<partial name="_product_mini" for="@item" />;
                var listViewModel = new ListViewModel {
                    Items = Model.CatalogModel.CatalogItems,
                    ItemTemplate = listItemTemplate
                };
                <partial name="ResultViews/_listView" for="@listViewModel" />
                break;
            }
            case ResultView.Table:
                <partial name="ResultViews/_tableView" for="CatalogModel.CatalogItems" />
                break;
        }

        @await Html.PartialAsync("_pagination", Model.CatalogModel.PaginationInfo);
    }
    else
    {
        <div class="esh-catalog-items row">
             @Localizer["THERE ARE NO RESULTS THAT MATCH YOUR SEARCH"]
        </div>
    }
</div>
